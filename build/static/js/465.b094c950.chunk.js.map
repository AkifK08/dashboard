{"version":3,"file":"static/js/465.b094c950.chunk.js","mappings":"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","sources":["Component.js/TitleCard.js","Comp/HomeComp.js"],"sourcesContent":["import React from 'react'\nimport { COLORS,FONTS } from '../Theme/Theme'\nimport '../CSS/constant.css'\nimport useMediaQuery from '../utils/useMediaQuery'\nexport const TitleCard = ({\n    container,\n    label,\n    Icon,\n    appendComponent,\n    onPress\n}) => {\n  const matches = useMediaQuery('(min-width:819px)')\n  const mobile = useMediaQuery('(min-width:600px)')\n\n\n  return (\n    <button \n    className='button'\n    style={{\n        display:\"flex\",\n        flexDirection:\"column\",\n        justifyContent:\"space-evenly\",\n        alignItems:\"center\",\n        // height:\"150px\",\n        width:mobile ? !matches ? 700 : 1000 : 350,\n        margin:10,\n        backgroundColor:COLORS.white,\n        borderRadius:3,\n        alignSelf:\"center\",\n        ...container\n      }}\n      onClick={onPress}\n      >\n        <p style={{\n            display:\"flex\",\n            justifyContent:\"flex-start\",\n            alignItems:\"center\",\n            alignSelf:\"flex-start\",\n            paddingInline:20,\n            paddingBlock:5,\n            ...FONTS.body2,\n            color:COLORS.gray\n        }}>\n           <Icon size={26} color={COLORS.gray} />&nbsp;{label}\n        </p>\n        \n        {appendComponent}\n      </button>\n  )\n}\n","import React from 'react'\nimport { TitleCard } from '../Component.js/TitleCard'\nimport { COLORS, FONTS } from '../Theme/Theme'\nimport useMediaQuery from '../utils/useMediaQuery'\nimport { AiOutlineUser } from \"react-icons/ai\";\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, PieChart, Pie, Cell } from 'recharts';\nimport { TbPig } from 'react-icons/tb'\nimport axiosIns from '../utils/helpers';\nexport default function HomeComp() {\n    const[Animal,setAnimal]=React.useState([])\n    const[User,setUser]=React.useState([])\n\n    function getAnimal(){\n        var animal=[]\n        axiosIns.get(\"/animalcount/\").then((res) => {\n            Object.entries(res.data).forEach(([k,v]) => {\n              animal.push({\n                'name':k,\n                'count':v\n              })\n          })\n            setAnimal(animal)\n          })\n    }\n    function getUser(){\n        axiosIns.get(\"/getusersmonthly/\").then((res) => {\n            setUser(res.data)\n          }).catch((err)=>{\n                console.log(err)\n            })\n    }\n\n    React.useEffect(() => {\n        getUser()\n        getAnimal()\n    }, [])\n    \n    \n    const matches = useMediaQuery('(min-width:819px)')\n    const mobile = useMediaQuery('(min-width:600px)')\n    const CustomTooltip = ({ active, payload, label }) => {\n        if (active && payload && payload.length) {\n            return (\n                <div style={{\n                    backgroundColor: COLORS.transparentPrimary2,\n                    ...FONTS.h3,\n                    padding: \"2px\",\n                    borderRadius: \"2px\"\n                }}>\n                    <p className=\"label\">{`${label} : ${payload[0].value} ${\"User\"}`}</p>\n                </div>\n            );\n        }\n\n        return null;\n    };\n\n    const pdata = [\n        {\n            name: 'JAN-22',\n            student: 11,\n            fees: 120\n        },\n        {\n            name: 'Feb',\n            student: 15,\n            fees: 12\n        },\n        {\n            name: 'Mar',\n            student: 5,\n            fees: 10\n        },\n        {\n            name: 'April',\n            student: 10,\n            fees: 5\n        },\n        {\n            name: 'May',\n            student: 9,\n            fees: 4\n        },\n        {\n            name: 'June',\n            student: 10,\n            fees: 8\n        },\n        {\n            name: 'July',\n            student: 3,\n            fees: 5\n        },\n        {\n            name: 'Aug',\n            student: 20,\n            fees: 5\n        },\n        {\n            name: 'Sept',\n            student: 10,\n            fees: 5\n        },\n        {\n            name: 'Oct',\n            student: 0,\n            fees: 5\n        },\n        {\n            name: 'Nov',\n            student: 0,\n            fees: 5\n        }, {\n            name: 'Dec',\n            student: 0,\n            fees: 5\n        },\n    ];\n    const Wdata = [\n        {\n            name: 'Sun',\n            student: 11,\n            fees: 120\n        },\n        {\n            name: 'Mon',\n            student: 15,\n            fees: 12\n        },\n        {\n            name: 'Tue',\n            student: 5,\n            fees: 10\n        },\n        {\n            name: 'Wed',\n            student: 10,\n            fees: 5\n        },\n        {\n            name: 'Thu',\n            student: 9,\n            fees: 4\n        },\n        {\n            name: 'Fri',\n            student: 10,\n            fees: 8\n        },\n        {\n            name: 'Sat',\n            student: 3,\n            fees: 5\n        },\n    ];\n\n    const pieData = [\n        { name: 'Android', value: 300 },\n        { name: 'IOS', value: 300 },\n    ]\n    const color = [COLORS.transparentPrimary,COLORS.transparentPrimary2, '#FFBB28', '#FF8042']\n    const RADIAN = Math.PI / 180;\n    const renderCustomizedLabel = ({ cx, cy, midAngle, innerRadius, outerRadius, percent,name, index }) => {\n        const radius = innerRadius + (outerRadius - innerRadius) * 0.3;\n        const x = cx + radius * Math.cos(-midAngle * RADIAN);\n        const y = cy + radius * Math.sin(-midAngle * RADIAN);\n\n        return (\n            <text \n            style={{\n                ...FONTS.h3,\n            }}\n            x={x-15} y={y} fill={COLORS.black} textAnchor={x > cx ? 'start' : 'end'} dominantBaseline=\"central\">\n                {`${name} ${ (percent * 100).toFixed(0)}%`}\n            </text>\n        );\n    };\n    return (\n\n        <div style={{\n            marginTop: 0,\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            backgroundColor: COLORS.layout,\n            ...FONTS.body2,\n            paddingBlockStart: 10,\n            paddingBlockEnd: 70\n        }}>\n            <TitleCard\n                Icon={AiOutlineUser}\n                label={\"Active Users\"}\n                onPress={() => {\n                    // alert(\"Active User\")\n                }}\n                appendComponent={\n                    <LineChart width={mobile ? !matches ? 700 : 900 : 350} height={400} data={User} margin={{ top: 25, right: 30, bottom: mobile ? 10 : 50, left: -15 }} >\n                        <CartesianGrid strokeDasharray=\"3 3\" stroke={COLORS.transparentPrimary} />\n                        <XAxis dataKey={\"date\"} angle={matches ? 0 : -270} tickMargin={matches ? 10 : 30} style={{\n                            ...FONTS.h4,\n                            backgroundColor: COLORS.Primary\n                        }}\n                        />\n                        <YAxis\n                            style={{\n                                ...FONTS.h4,\n\n                            }}\n                        />\n\n                        <Tooltip content={<CustomTooltip />} />\n                        {/* <Legend/> */}\n                        <Line type=\"monotoneX\" dataKey=\"count\" stroke={COLORS.Primary} strokeWidth={2}\n                            dot={{ stroke: COLORS.Primary, strokeWidth: 1, r: 5, strokeDasharray: '' }}\n\n                        />\n                    </LineChart>\n                }\n            />\n            <TitleCard\n                Icon={AiOutlineUser}\n                label={\"New Users\"}\n                onPress={() => {\n                    // alert(\"Active User\")\n                }}\n                appendComponent={\n                    <div style={{\n                        display: \"flex\",\n                        // alignItems:\"center\",\n                        flexDirection: !mobile ? \"column\" : \"row\"\n                    }}>\n\n                        <LineChart width={mobile ? !matches ? 700 : 500 : 350} height={400} data={Wdata} margin={{ top: 25, right: 30, bottom: mobile ? 10 : 50, left: -15 }} >\n                            <CartesianGrid strokeDasharray=\"3 3\" stroke={COLORS.transparentPrimary} />\n                            <XAxis dataKey={\"name\"} angle={matches ? 0 : -270} tickMargin={matches ? 10 : 30} style={{\n\n                                ...FONTS.h4,\n                                backgroundColor: COLORS.Primary\n                            }}\n                            />\n                            <YAxis\n                                style={{\n                                    ...FONTS.h4,\n\n                                }}\n                            />\n\n                            <Tooltip content={<CustomTooltip />} />\n                            {/* <Legend/> */}\n                            <Line type=\"monotoneX\" dataKey=\"student\" stroke={COLORS.Primary} strokeWidth={2}\n                                dot={{ stroke: COLORS.Primary, strokeWidth: 1, r: 5, strokeDasharray: '' }}\n\n                            />\n                        </LineChart>\n                        <div style={{\n                            // height: 2.5,\n                            width: \"2.5px\",\n                            backgroundColor: COLORS.lightGray1\n                        }} />\n                        {/* <ResponsiveContainer width=\"100%\" height=\"100%\"> */}\n                        <PieChart width={mobile ? !matches ? 700 : 500 : 350} height={350}>\n                            <Pie\n                                labelLine={false}\n                                paddingAngle={5}\n                                label={renderCustomizedLabel}\n                                isAnimationActive={false}\n                                data={pieData} dataKey=\"value\" cx=\"50%\" cy=\"50%\" outerRadius={120} innerRadius={60}>\n                                {pieData.map((entry, index) => (\n                                    <Cell key={`cell-${index}`} fill={color[index % color.length]} />\n                                ))}\n                            </Pie>\n                            {/* <Tooltip/> */}\n                        </PieChart>\n                        {/* </ResponsiveContainer> */}\n\n\n                    </div>\n                }\n            />\n            <TitleCard\n                Icon={TbPig}\n                label={\"Animals\"}\n                onPress={() => {\n                    // alert(\"Active User\")\n                }}\n                appendComponent={\n                    <LineChart width={mobile ? !matches ? 700 : 900 : 350} height={400} data={Animal} margin={{ top: 25, right: 30, bottom: mobile ? 10 : 50, left: -15 }} >\n                        <CartesianGrid strokeDasharray=\"3 3\" stroke={COLORS.transparentPrimary} />\n                        <XAxis dataKey={\"name\"} angle={matches ? 0 : -270} tickMargin={matches ? 10 : 30} style={{\n                            ...FONTS.h4,\n                            backgroundColor: COLORS.Primary\n                        }}\n                        />\n                        <YAxis\n                            style={{\n                                ...FONTS.h4,\n\n                            }}\n                        />\n\n                        <Tooltip content={<CustomTooltip />} />\n                        {/* <Legend/> */}\n                        <Line type=\"monotoneX\" dataKey=\"count\" stroke={COLORS.Primary} strokeWidth={2}\n                            dot={{ stroke: COLORS.Primary, strokeWidth: 1, r: 5, strokeDasharray: '' }}\n\n                        />\n                    </LineChart>\n                }\n            />\n        </div>\n\n\n    )\n}\n\n"],"names":["TitleCard","container","label","Icon","appendComponent","onPress","matches","useMediaQuery","mobile","className","style","display","flexDirection","justifyContent","alignItems","width","margin","backgroundColor","COLORS","borderRadius","alignSelf","onClick","paddingInline","paddingBlock","FONTS","color","size","HomeComp","React","Animal","setAnimal","User","setUser","axiosIns","then","res","data","catch","err","console","log","animal","Object","entries","forEach","k","v","push","getAnimal","CustomTooltip","active","payload","length","padding","value","pieData","name","RADIAN","Math","PI","marginTop","paddingBlockStart","paddingBlockEnd","AiOutlineUser","LineChart","height","top","right","bottom","left","CartesianGrid","strokeDasharray","stroke","XAxis","dataKey","angle","tickMargin","YAxis","Tooltip","content","Line","type","strokeWidth","dot","r","student","fees","PieChart","Pie","labelLine","paddingAngle","cx","cy","midAngle","innerRadius","outerRadius","percent","radius","index","x","cos","y","sin","fill","textAnchor","dominantBaseline","toFixed","isAnimationActive","map","entry","Cell","TbPig"],"sourceRoot":""}