{"version":3,"file":"static/js/902.eed4b172.chunk.js","mappings":"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","sources":["../node_modules/recharts/es6/chart/BarChart.js","Comp/Animal.js","Component.js/TitleCard.js"],"sourcesContent":["/**\n * @fileOverview Bar Chart\n */\nimport { generateCategoricalChart } from './generateCategoricalChart';\nimport { Bar } from '../cartesian/Bar';\nimport { XAxis } from '../cartesian/XAxis';\nimport { YAxis } from '../cartesian/YAxis';\nimport { formatAxisMap } from '../util/CartesianUtils';\nexport var BarChart = generateCategoricalChart({\n  chartName: 'BarChart',\n  GraphicalChild: Bar,\n  defaultTooltipEventType: 'axis',\n  validateTooltipEventTypes: ['axis', 'item'],\n  axisComponents: [{\n    axisType: 'xAxis',\n    AxisComp: XAxis\n  }, {\n    axisType: 'yAxis',\n    AxisComp: YAxis\n  }],\n  formatAxisMap: formatAxisMap\n});","import React from 'react'\nimport { COLORS, FONTS } from '../Theme/Theme'\nimport { TitleCard } from '../Component.js/TitleCard'\nimport { BarChart, Bar, CartesianGrid, XAxis, YAxis, Tooltip, PieChart, Pie, Cell } from 'recharts';\nimport useMediaQuery from '../utils/useMediaQuery'\nimport { useSelector } from 'react-redux';\nimport { TbPig } from 'react-icons/tb'\n\nexport default function Animal() {\n  const matches = useMediaQuery('(min-width:819px)')\n  const mobile = useMediaQuery('(min-width:600px)')\n  const Animal = useSelector(state => state.Reducers.animal)\n  const color = [COLORS.transparentPrimary, COLORS.transparentPrimary2, '#FFBB28', '#FF8042']\n  const RADIAN = Math.PI / 180;\n  const renderCustomizedLabel = ({ cx, cy, midAngle, innerRadius, outerRadius, percent, name, index }) => {\n    const radius = innerRadius + (outerRadius - innerRadius) * 0.3;\n    const x = cx + radius * Math.cos(-midAngle * RADIAN);\n    const y = cy + radius * Math.sin(-midAngle * RADIAN);\n\n    return (\n      <text\n        style={{\n          ...FONTS.h3,\n        }}\n        x={x - 15} y={y} fill={COLORS.black} textAnchor={x > cx ? 'start' : 'end'} dominantBaseline=\"central\">\n        {`${name} ${(percent * 100).toFixed(0)}%`}\n      </text>\n    );\n  };\n  const Data = [\n    {\n      img:\"\",\n      name: 'Cow',\n      d: [\n        {\n          name: \"count1\",\n          count: 4000,\n        },\n        {\n          name: \"count2\",\n          count: 2400,\n        },\n        {\n          name: \"count3\",\n          count: 2400,\n        }\n      ]\n    },\n    {\n      img:\"\",\n      name: 'Goat',\n      d: [\n        {\n          name: \"count1\",\n          count: 4000,\n        },\n        {\n          name: \"count2\",\n          count: 2400,\n        },\n        {\n          name: \"count3\",\n          count: 2400,\n        }\n      ]\n    }\n  ]\n\n  return (\n    <div style={{\n      marginTop: 0,\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      backgroundColor: COLORS.layout,\n      ...FONTS.body2,\n      paddingBlockStart: 10,\n      paddingBlockEnd: 70\n    }}>\n\n      <TitleCard\n        Icon={TbPig}\n        label={\"Animals\"}\n        appendComponent={\n          <BarChart width={mobile ? !matches ? 700 : 900 : 350} height={400} data={Animal} margin={{ top: 25, right: 30, bottom: mobile ? 10 : 50, left: -15 }} >\n            <Bar dataKey=\"count\" fill={COLORS.Primary} />\n            <CartesianGrid strokeDasharray=\"3 3\" stroke={COLORS.transparentPrimary} />\n            <XAxis dataKey=\"name\" />\n            <Tooltip />\n            <YAxis />\n          </BarChart>\n        }\n      />\n      {\n        Data.map((item, index) => {\n          return (\n            <TitleCard\n              Icon={TbPig}\n              label={item.name}\n              appendComponent={\n                <div style={{\n                  display: \"flex\",\n                  flexDirection: !mobile ? \"column\" : \"row\"\n                }}>\n                  <div>\n                    <BarChart width={mobile ? !matches ? 700 : 500 : 350} height={400} data={item.d} margin={{ top: 25, right: 30, bottom: mobile ? 10 : 50, left: -15 }}  >\n                      <Bar dataKey=\"count\" fill={COLORS.Primary} />\n                      <CartesianGrid strokeDasharray=\"3 3\" stroke={COLORS.transparentPrimary} />\n                      <XAxis dataKey=\"name\" />\n                      <Tooltip />\n                      <YAxis />\n                    </BarChart>\n                  </div>\n                  <div style={{\n                    // height: 2.5,\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    width: \"2.5px\",\n                    backgroundColor: COLORS.lightGray1\n                  }} />\n                  <div>\n                    <PieChart width={mobile ? !matches ? 700 : 500 : 350} height={350}>\n                      <Pie\n                        labelLine={false}\n                        paddingAngle={5}\n                        label={renderCustomizedLabel}\n                        isAnimationActive={false}\n                        data={item.d} dataKey=\"count\" cx=\"50%\" cy=\"50%\" outerRadius={120} innerRadius={60}>\n                        {item.d.map((entry, index) => (\n                          <Cell key={`cell-${index}`} fill={color[index % color.length]} />\n                        ))}\n                      </Pie>\n                      {/* <Tooltip/> */}\n                    </PieChart>\n                  </div>\n\n                </div>\n              }\n            />\n          )\n        }\n        )\n      }\n    </div>\n  )\n}\n","import React from 'react'\nimport { COLORS,FONTS } from '../Theme/Theme'\nimport '../CSS/constant.css'\nimport useMediaQuery from '../utils/useMediaQuery'\nexport const TitleCard = ({\n    container,\n    label,\n    Icon,\n    appendComponent,\n    onPress\n}) => {\n  const matches = useMediaQuery('(min-width:819px)')\n  const mobile = useMediaQuery('(min-width:600px)')\n\n\n  return (\n    <button \n    className='button'\n    style={{\n        display:\"flex\",\n        flexDirection:\"column\",\n        justifyContent:\"space-evenly\",\n        alignItems:\"center\",\n        // height:\"150px\",\n        width:mobile ? !matches ? 700 : 1000 : 350,\n        margin:10,\n        backgroundColor:COLORS.white,\n        borderRadius:3,\n        alignSelf:\"center\",\n        ...container\n      }}\n      onClick={onPress}\n      >\n        {\n          label?\n          <p style={{\n            display:\"flex\",\n            justifyContent:\"flex-start\",\n            alignItems:\"center\",\n            alignSelf:\"flex-start\",\n            paddingInline:20,\n            paddingBlock:5,\n            ...FONTS.body2,\n            color:COLORS.gray\n        }}>\n           <Icon size={26} color={COLORS.gray} />&nbsp;{label}\n        </p>:null\n        }\n        \n        \n        {appendComponent}\n      </button>\n  )\n}\n"],"names":["BarChart","generateCategoricalChart","chartName","GraphicalChild","Bar","defaultTooltipEventType","validateTooltipEventTypes","axisComponents","axisType","AxisComp","XAxis","YAxis","formatAxisMap","Animal","matches","useMediaQuery","mobile","useSelector","state","Reducers","animal","color","COLORS","RADIAN","Math","PI","renderCustomizedLabel","cx","cy","midAngle","innerRadius","outerRadius","percent","name","radius","index","x","cos","y","sin","style","FONTS","fill","textAnchor","dominantBaseline","toFixed","marginTop","display","flexDirection","justifyContent","alignItems","backgroundColor","paddingBlockStart","paddingBlockEnd","TitleCard","Icon","TbPig","label","appendComponent","width","height","data","margin","top","right","bottom","left","dataKey","CartesianGrid","strokeDasharray","stroke","Tooltip","img","d","count","map","item","PieChart","Pie","labelLine","paddingAngle","isAnimationActive","entry","Cell","length","container","onPress","className","borderRadius","alignSelf","onClick","paddingInline","paddingBlock","size"],"sourceRoot":""}